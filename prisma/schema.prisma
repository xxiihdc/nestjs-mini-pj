generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id                Int      @id @default(autoincrement())
  username          String
  encryptedPassword String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model User {
  id                 Int      @id @default(autoincrement())
  employeeId         Int      @unique
  encrypted_password String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  employee           Employee @relation(fields: [employeeId], references: [id])
}

model Employee {
  id                                                 Int             @id @default(autoincrement())
  code                                               String          @unique
  createdAt                                          DateTime        @default(now())
  updatedAt                                          DateTime        @updatedAt
  companyEmail                                       String          @unique
  companyUniqueName                                  String?
  companyId                                          Int
  contractType                                       String
  endDate                                            DateTime?
  fullName                                           String
  startDate                                          DateTime
  Company                                            Company         @relation(fields: [companyId], references: [id])
  User                                               User?
  UserTimeSheet_UserTimeSheet_edited_by_idToEmployee UserTimeSheet[] @relation("UserTimeSheet_edited_by_idToEmployee")
  UserTimeSheet_UserTimeSheet_employee_idToEmployee  UserTimeSheet[] @relation("UserTimeSheet_employee_idToEmployee")

  @@index([companyId], map: "Employee_company_id_fkey")
}

model Company {
  id            Int             @id @default(autoincrement())
  status        String
  companyDomain String
  createdAt     DateTime        @default(now())
  name          String
  planType      CompanyPlanType @default(FREE)
  updatedAt     DateTime        @updatedAt
  Employee      Employee[]
  Group         Group[]
  Holiday       Holiday[]
}

model Group {
  id          Int      @id @default(autoincrement())
  name        String
  companyId   Int
  parentId    Int?     @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Company     Company  @relation(fields: [companyId], references: [id])
  ParentGroup Group?   @relation("GroupToGroup", fields: [parentId], references: [id])
  ChildGroup  Group[]  @relation("GroupToGroup")

  @@index([companyId], map: "Group_company_id_fkey")
}

model Holiday {
  id          Int      @id @default(autoincrement())
  date        DateTime @db.Date
  companyId   Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Company     Company  @relation(fields: [companyId], references: [id])

  @@index([companyId], map: "Holiday_company_id_fkey")
}

model UserTimeSheet {
  id                                            Int       @id @default(autoincrement())
  employeeId                                    Int
  startTime                                     DateTime
  endTime                                       DateTime?
  editedById                                    Int?
  createdAt                                     DateTime  @default(now())
  updatedAt                                     DateTime  @updatedAt
  type                                          String
  Employee_UserTimeSheet_edited_by_idToEmployee Employee? @relation("UserTimeSheet_edited_by_idToEmployee", fields: [editedById], references: [id])
  Employee_UserTimeSheet_employee_idToEmployee  Employee  @relation("UserTimeSheet_employee_idToEmployee", fields: [employeeId], references: [id])

  @@index([editedById], map: "UserTimeSheet_edited_by_id_fkey")
  @@index([employeeId], map: "UserTimeSheet_employee_id_fkey")
}

enum CompanyPlanType {
  FREE
  PRO
  BUSINESS
}
